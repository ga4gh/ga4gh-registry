--
-- PostgreSQL database dump from PRD instance
--

INSERT INTO ga4gh_schema.organization VALUES ('org.ga4gh', 'Global Alliance for Genomics and Health', 'GA4GH', 'https://ga4gh.org');
INSERT INTO ga4gh_schema.organization VALUES ('uk.ac.ebi', 'European Bioinformatics Institute', 'EBI', 'https://www.ebi.ac.uk/');
INSERT INTO ga4gh_schema.organization VALUES ('pro.biocontainers', 'Biocontainers', NULL, 'https://biocontainers.pro');
INSERT INTO ga4gh_schema.organization VALUES ('org.dockstore', 'Dockstore', NULL, 'https://dockstore.org');
INSERT INTO ga4gh_schema.organization VALUES ('eu.crg', 'Centre for Genomic Regulation', 'CRG', 'https://www.crg.eu/');
INSERT INTO ga4gh_schema.organization VALUES ('edu.caltech', 'California Institute of Technology', 'Caltech', 'https://www.caltech.edu/');
INSERT INTO ga4gh_schema.organization VALUES ('fi.csc', 'CSC - IT Center for Science Ltd.', NULL, 'https://www.csc.fi/');
INSERT INTO ga4gh_schema.organization VALUES ('com.dnastack', 'DNAstack', NULL, 'https://dnastack.com');
INSERT INTO ga4gh_schema.organization VALUES ('org.autismspeaks', 'Autism Speaks', NULL, 'https://www.autismspeaks.org/');
INSERT INTO ga4gh_schema.organization VALUES ('gov.nih.nci.dcfs', 'NCI Data Commons Framework Services', 'NCI DCFS', 'https://nci-crdc.datacommons.io/');
INSERT INTO ga4gh_schema.organization VALUES ('io.theanvil', 'AnVIL', NULL, 'https://gen3.theanvil.io/');
INSERT INTO ga4gh_schema.organization VALUES ('gov.nih.nhlbi.biodatacatalyst', 'BioData Catalyst', NULL, 'https://gen3.biodatacatalyst.nhlbi.nih.gov/');
INSERT INTO ga4gh_schema.organization VALUES ('com.sb', 'Seven Bridges', NULL, 'https://www.sevenbridges.com');
INSERT INTO ga4gh_schema.organization VALUES ('edu.chop', 'Childrens Hospital of Philadelphia', 'CHOP', 'https://kidsfirstdrc.org');
INSERT INTO ga4gh_schema.organization VALUES ('org.gen3', 'Gen3', NULL, 'https://gen3.org');
INSERT INTO ga4gh_schema.organization VALUES ('edu.ctds', 'Center for Translational Data Science', 'CTDS', 'https://ctds.uchicago.edu/');

INSERT INTO ga4gh_schema.release_status VALUES ('0', 'Proposed');
INSERT INTO ga4gh_schema.release_status VALUES ('1', 'Approved');
INSERT INTO ga4gh_schema.release_status VALUES ('2', 'Legacy');

INSERT INTO ga4gh_schema.standard_category VALUES ('0', 'FileFormat');
INSERT INTO ga4gh_schema.standard_category VALUES ('1', 'API');
INSERT INTO ga4gh_schema.standard_category VALUES ('2', 'Schema');
INSERT INTO ga4gh_schema.standard_category VALUES ('3', 'Policy');

INSERT INTO ga4gh_schema.work_stream VALUES ('org.ga4gh.workstream.lsg', 'Large Scale Genomics', 'LSG');
INSERT INTO ga4gh_schema.work_stream VALUES ('org.ga4gh.workstream.discovery', 'Discovery', NULL);
INSERT INTO ga4gh_schema.work_stream VALUES ('org.ga4gh.workstream.cloud', 'Cloud', NULL);
INSERT INTO ga4gh_schema.work_stream VALUES ('org.ga4gh.workstream.duri', 'Data Use and Researcher Identities', 'DURI');
INSERT INTO ga4gh_schema.work_stream VALUES ('org.ga4gh.workstream.gks', 'Genomic Knowledge Standards', 'GKS');
INSERT INTO ga4gh_schema.work_stream VALUES ('org.ga4gh.workstream.clinpheno', 'Clinical & Phenotypic Data Capture', 'Clin/Pheno');
INSERT INTO ga4gh_schema.work_stream VALUES ('org.ga4gh.workstream.rews', 'Regulatory & Ethics', 'REWS');
INSERT INTO ga4gh_schema.work_stream VALUES ('org.ga4gh.workstream.dsws', 'Data Security', 'DSWS');

INSERT INTO ga4gh_schema.standard VALUES ('search', 'Search', '1', 'Search API', 'Search API', 'https://github.com/ga4gh-discovery/ga4gh-discovery-search', '0', 'search', NULL, 'org.ga4gh.workstream.discovery');
INSERT INTO ga4gh_schema.standard VALUES ('htsget', 'htsget', '1', 'Flexible genomic data retrieval API', 'htsget is a genomic data retrieval specification that allows users to download read data for subsections of the genome in which they are interested. Currently, users must download the whole set of files in which that data resides, a slow, resource-intense process.', 'https://github.com/samtools/hts-specs/blob/master/htsget.md', '1', 'htsget', NULL, 'org.ga4gh.workstream.lsg');
INSERT INTO ga4gh_schema.standard VALUES ('cram', 'CRAM', '0', 'Compression format for long-term storage of genomic data', 'The CRAM file format is an efficient storage format for read data, achieving significantly better lossless compression than BAM, whilst maintaining full compatibility.', 'http://samtools.github.io/hts-specs/CRAMv3.pdf', '1', 'cram', NULL, 'org.ga4gh.workstream.lsg');
INSERT INTO ga4gh_schema.standard VALUES ('service-registry', 'Service Registry', '1', 'Lists metadata about other GA4GH services within a network', 'The Service Registry API provides information about other GA4GH services, primarily for the purpose of organizing services into networks or groups and service discovery across organizational boundaries. It’s a minimalistic, simple, lightweight, read-only API for listing services and their metadata, as described by service-info.', 'https://github.com/ga4gh-discovery/ga4gh-service-registry/blob/develop/README.md', '1', 'service-registry', NULL, 'org.ga4gh.workstream.discovery');
INSERT INTO ga4gh_schema.standard VALUES ('service-info', 'Service Info', '1', 'Extensible endpoint describing service metadata for GA4GH API-based specifications', 'The Service Info API is an endpoint for describing GA4GH service metadata, designed for extension and inclusion in other APIs. Service info is used to describe a single service, while Service Registry is used to describe multiple services.', 'https://github.com/ga4gh-discovery/ga4gh-service-info/blob/develop/README.md', '1', 'service-info', NULL, 'org.ga4gh.workstream.discovery');
INSERT INTO ga4gh_schema.standard VALUES ('beacon', 'Beacon API', '1', 'Informs a researcher whether or not a user-specified mutation has been observed in a particular dataset', 'The Beacon API can be implemented as a web-accessible service that users may query for information about a specific allele. A user of a Beacon can pose the query “Have you observed this nucleotide (e.g. C) at this genomic location (e.g. position 32,936,732 on chromosome 13)?” to which the Beacon responds with either “yes” or “no”. The new release of the Beacon API extends its functionality through support for additional types of genomic variants and improved metadata support. Additionally, the accompanying ELIXIR Beacon reference implementation demonstrates ELIXIR Authorization and Authentication Infrastructure (AAI), enabling data owners to light Beacons at different tiers of data access: public, registered, or controlled.', 'https://github.com/ga4gh-beacon/specification', '1', 'beacon', NULL, 'org.ga4gh.workstream.discovery');
INSERT INTO ga4gh_schema.standard VALUES ('passports', 'Passports', '1', 'Easily communicate researcher data access authorizations across multiple organizations', 'The GA4GH Passport specification aims to support data access policies within current and evolving data access governance systems. This specification defines Passports and Passport Visas as the standard way of communicating the data access authorizations that a user has based on either their role (e.g. researcher), affiliation, or access status.', 'https://github.com/ga4gh-duri/ga4gh-duri.github.io/blob/master/researcher_ids/ga4gh_passport_v1.md#ga4gh-passport', '1', 'passports', NULL, 'org.ga4gh.workstream.duri');
INSERT INTO ga4gh_schema.standard VALUES ('sam', 'Sequence Alignment Map', '0', 'Specifications for storing next-generation sequencing read data', 'Specifications for storing next-generation sequencing read data.', 'https://samtools.github.io/hts-specs/SAMv1.pdf', '1', 'sam', 'SAM/BAM', 'org.ga4gh.workstream.lsg');
INSERT INTO ga4gh_schema.standard VALUES ('drs', 'Data Repository Service', '1', 'Access genomic datasets regardless of the repository in which they are stored or managed', 'The Data Repository Service (DRS) API, a standard for building data repositories and adapting access tools to work with those repositories, works with other approved APIs from the GA4GH Cloud Work Stream to allow researchers to discover algorithms across different cloud environments and send them to datasets they wish to analyze. The API allows data consumers to access datasets regardless of the repository in which they are stored or managed.', 'https://github.com/ga4gh/data-repository-service-schemas', '1', 'drs', 'DRS', 'org.ga4gh.workstream.cloud');
INSERT INTO ga4gh_schema.standard VALUES ('crypt4gh', 'Crypt4GH', '0', 'Encrypt sensitive genomic data in transit and at rest', 'By its nature, genomic data can include information of a confidential nature about the health of individuals. It is important that such information is not accidentally disclosed. One part of the defense against such disclosure is to keep the data in an encrypted format as much as possible. Crypt4GH is a file format that can be used to store data in an encrypted and authenticated state. Existing applications can, with minimal modification, read and write data in the encrypted format. The choice of encryption also allows the encrypted data to be read starting from any location, facilitating indexed access to files.', 'http://samtools.github.io/hts-specs/crypt4gh.pdf', '1', 'crypt4gh', NULL, 'org.ga4gh.workstream.lsg');
INSERT INTO ga4gh_schema.standard VALUES ('pedigree', 'Pedigree', '0', 'Unambiguous, computable pedigree and family information', 'The need for high quality, unambiguous, computable pedigree and family information is critical for scaling genomic analysis to larger, complex families. Pedigree data is currently represented in heterogeneous formats that frequently result in the use of lowest-common-denominator formats (e.g., PED) or custom JSON formats for data transfer. The HL7 FHIR standard core data models do not support pedigrees, but there is a draft extension to support genomic pedigrees that should be evaluated and potentially extended by the GA4GH. Standardizing the way systems represent family structure will allow patients to share this information more easily between healthcare systems and help software tools to use this information to improve genome analysis and diagnosis. The collection of specific clinical or genetic data is outside the scope of this deliverable, and would instead be handled by other formats and references to individuals within the pedigree representation.', 'https://github.com/ga4gh-cp/pedigree', '0', 'pedigree', NULL, 'org.ga4gh.workstream.clinpheno');
INSERT INTO ga4gh_schema.standard VALUES ('vcf', 'Variant Call Format', '0', 'The specifications for Variant Call Format Files (VCF)', 'The specifications for Variant Call Format Files (VCF)', 'https://samtools.github.io/hts-specs/VCFv4.3.pdf', '1', 'vcf', 'VCF', 'org.ga4gh.workstream.lsg');
INSERT INTO ga4gh_schema.standard VALUES ('bcf', 'Binary Variant Call Format', '0', 'The specifications for VCF binary equivalent', 'The specifications for VCF binary equivalent', 'https://samtools.github.io/hts-specs/BCFv2_qref.pdf', '1', 'bcf', 'BCF', 'org.ga4gh.workstream.lsg');
INSERT INTO ga4gh_schema.standard VALUES ('rnaget', 'RNAget', '1', 'Flexible download of RNAseq expression matrices via REST API', 'The RNAget API v1 provides a means of retrieving data from several types of RNA experiments including (i) feature-level expression data from RNA-seq type measurements and (ii) coordinate-based signal/intensity data similar to a bigwig representation via a client/server model.', 'https://github.com/ga4gh-rnaseq/schema', '1', 'rnaget', NULL, 'org.ga4gh.workstream.lsg');
INSERT INTO ga4gh_schema.standard VALUES ('vbt', 'Variant Benchmarking Tools', '2', 'Benchmarking methods and tools for accurate assessment of next generation sequencing variant calling', 'Standardized benchmarking methods and tools are essential to robust accuracy assessment of next generation sequencing variant calling. Benchmarking variant calls requires careful attention to definitions of performance metrics, sophisticated comparison approaches, and stratification by variant type and genome context. The germline small variant benchmarking tools address challenges in (1) matching variant calls with different representations, (2) defining standard performance metrics, (3) enabling stratification of performance by variant type and genome context, and (4) developing and describing limitations of high-confidence calls and regions that can be used as “truth”. They have been piloted in the precisionFDA variant calling challenges to identify the best-in-class variant calling methods within high-confidence regions.', 'https://github.com/ga4gh/benchmarking-tools', '1', 'standard', NULL, 'org.ga4gh.workstream.lsg');
INSERT INTO ga4gh_schema.standard VALUES ('phenopackets', 'Phenopackets', '2', 'Standardized data models for capturing clinical and phenotypic information', 'While ontologies and terminologies provide the standard data concept definitions for capturing clinical information, an information model is required to successfully exchange that information between clinical information systems and with related information systems. Phenopackets provides information models with different levels of complexity to enable high level clinical phenotype information as well as deep clinical phenotype information to be exchanged.', 'https://phenopackets-schema.readthedocs.io/en/1.0.0/index.html', '1', 'phenopackets', NULL, 'org.ga4gh.workstream.clinpheno');
INSERT INTO ga4gh_schema.standard VALUES ('duo', 'Data Use Ontology', '2', 'Semantically tag genomic datasets to control access based on researcher authorization level or intended use', 'The GA4GH Data Use Ontology (DUO) allows users to semantically tag genomic datasets with usage restrictions, allowing them to become automatically discoverable based on a health, clinical, or biomedical researcher’s authorization level or intended use. DUO is based on the OBO Foundry principles and developed using the W3C Web Ontology Language. It is being used in production by the European Genome-phenome Archive (EGA) at EMBL-EBI/CRG as well as the Broad Institute for the Data Use Oversight System (DUOS).', 'https://github.com/EBISPOT/DUO', '1', 'standard', 'DUO', 'org.ga4gh.workstream.duri');
INSERT INTO ga4gh_schema.standard VALUES ('dsip', 'Data Security Infrastructure Policy', '3', 'Recommended security infrastructure and technology for stakeholders in the international genomic data sharing ecosystem.', 'This document describes the security infrastructure policy and technology recommended for stakeholders in the international genomic data sharing ecosystem.', 'https://github.com/ga4gh/data-security/blob/master/DSIP/DSIP_v4.0.md', '1', 'standard', 'DSIP', 'org.ga4gh.workstream.dsws');
INSERT INTO ga4gh_schema.standard VALUES ('aai', 'Authentication and Authorization Infrastructure', '3', 'Authenticate researcher identity to facilitate access to genomic data from holders adhering to GA4GH standards', 'The GA4GH AAI specification leverages OpenID Connect (OIDC) Servers for use in authenticating the identity of researchers desiring to access clinical and genomic resources from data holders adhering to GA4GH standards, and to enable data holders to obtain security-related attributes of those researchers.', 'https://github.com/ga4gh/data-security/blob/master/AAI/AAIConnectProfile.md', '1', 'standard', 'AAI', 'org.ga4gh.workstream.dsws');
INSERT INTO ga4gh_schema.standard VALUES ('family-history', 'Family History Tools Inventory', '2', 'Catalogue of family history tools', 'The Family History Tool Inventory is a catalogue of family history tools currently available for documenting family health history information. The Statement of Best Practice highlights current approaches and challenges in enabling family history to guide clinical care to developers of clinically-oriented family history collection systems, including stand alone and EHR-integrated systems. The inventory will be updated periodically and we encourage recommendations of other tools to include.', 'https://drive.google.com/file/d/0B9MKz0Tq6z3QeXF0U1lUTW9XREtxdGk0NXo2eTdDZ190cVlB/view', '1', 'standard', NULL, 'org.ga4gh.workstream.clinpheno');
INSERT INTO ga4gh_schema.standard VALUES ('refget', 'Refget', '1', 'Retrieve genomic reference sequences by vendor-neutral checksum identifier derived from sequence content', 'All sequencing-based genomic analysis uses a genomic “reference sequence” — a baseline of knowledge against which variations are observed. There are multiple human reference sequences of increasing accuracy and different organizations refer to the same sequence using different names or reuse names to refer to different reference releases. Reliable, reproducible genomic analysis depends on clear provenance back to reference data. The GA4GH refget API enables access to reference genomic sequences without ambiguity from different databases and servers using a checksum identifier based on the sequence content itself.', 'https://github.com/samtools/hts-specs/blob/master/refget.md', '1', 'refget', NULL, 'org.ga4gh.workstream.lsg');
INSERT INTO ga4gh_schema.standard VALUES ('trs', 'Tool Registry Service', '1', 'Exchange tools and workflows to analyze, read, and manipulate genomic data', 'The Tool Registry Service (TRS) is a standard API for exchanging tools and workflows to analyze, read, and manipulate genomic data. The ​TRS API is one of a series of technical standards from the Cloud Work Stream that together allow genomics researchers to bring algorithms to datasets in disparate cloud environments, rather than moving data around. TRS gives researchers access to far more tools than they can presently use, and allows developers to register their products so that they are visible on a multitude of sites, expanding their audience reach. The API also provides a set of requirements for tool and workflow registries to implement TRS.', 'https://ga4gh.github.io/tool-registry-service-schemas/', '1', 'trs', 'TRS', 'org.ga4gh.workstream.cloud');
INSERT INTO ga4gh_schema.standard VALUES ('wes', 'Workflow Execution Service', '1', 'Submit and inspect genomic analysis workflow runs', 'Portable tools — the ability to execute a single analysis in a variety of environments — allow researchers to work with more data from more sources, and tool builders to support more researchers and more use cases. The Workflow Execution Service (WES) API provides a standard for exactly that. This API lets users run a single workflow (defined using CWL or WDL) on multiple different platforms, clouds, and environments, and be confident that it will work the same way. The API provides methods to request that a workflow be run, pass parameters to that workflow, get information about running workflows, and cancel a running workflow.', 'https://samtools.github.io/hts-specs/BCFv2_qref.pdf', '1', 'wes', 'WES', 'org.ga4gh.workstream.cloud');
INSERT INTO ga4gh_schema.standard VALUES ('psp', 'Privacy and Security Policy', '3', 'Promotes the sharing of genomic and health-related data in a way that protects the confidentiality, integrity, and availability of data and services, and the privacy of individuals, families, and communities whose data are shared.', 'The GA4GH Privacy and Security Policy aims to guide the sharing of genomic and health-related data in a way that protects and promotes the confidentiality, integrity, and availability of data and services, and the privacy of individuals, families, and communities whose data are shared.', 'https://www.ga4gh.org/wp-content/uploads/GA4GH-Data-Privacy-and-Security-Policy_FINAL-August-2019.pdf', '1', 'standard', NULL, 'org.ga4gh.workstream.dsws');
INSERT INTO ga4gh_schema.standard VALUES ('vr', 'Variant Representation', '2', 'Standardized data models to precisely exchange genetic variation data across communities', 'The ​Variation Representation (VR) specification​ provides a flexible framework of computational models, schemas, and algorithms to precisely and consistently exchange genetic variation data across communities. The specification, which was developed with input from national information resource providers, major public initiatives, and diagnostic testing laboratories, significantly reduces ambiguity in exchanging variation data. In this way, VR aims to improve the reliability and utility of the clinical annotations that are central to personalized medicine. The VR specification consists of five key components that together produce a reliable way of describing and transferring genetic variation data: an extensible terminology and information model, a machine-readable schema, conventions for data normalization, globally unique computed identifiers, and a python implementation.', 'https://vr-spec.readthedocs.io/en/1.0/', '1', 'vr', 'VRS', 'org.ga4gh.workstream.gks');

INSERT INTO ga4gh_schema.standard_version VALUES ('bcf:1.0.0', 'bcf', '1.0.0', 'https://samtools.github.io/hts-specs/BCFv1_qref.pdf', '1');
INSERT INTO ga4gh_schema.standard_version VALUES ('bcf:2.1.0', 'bcf', '2.1.0', 'https://samtools.github.io/hts-specs/BCFv2_qref.pdf', '1');
INSERT INTO ga4gh_schema.standard_version VALUES ('rnaget:1.0.0', 'rnaget', '1.0.0', 'https://ga4gh-rnaseq.github.io/schema/release/1.0.0/', '1');
INSERT INTO ga4gh_schema.standard_version VALUES ('phenopackets:1.0.0', 'phenopackets', '1.0.0', 'https://phenopackets-schema.readthedocs.io/en/1.0.0/index.html', '1');
INSERT INTO ga4gh_schema.standard_version VALUES ('refget:1.0.0', 'refget', '1.0.0', 'https://github.com/samtools/hts-specs/blob/master/refget.md', '1');
INSERT INTO ga4gh_schema.standard_version VALUES ('search:1.0.0', 'search', '1.0.0', 'https://github.com/ga4gh-discovery/ga4gh-discovery-search', '0');
INSERT INTO ga4gh_schema.standard_version VALUES ('htsget:1.2.0', 'htsget', '1.2.0', 'https://github.com/samtools/hts-specs/blob/master/htsget.md', '1');
INSERT INTO ga4gh_schema.standard_version VALUES ('service-info:1.0.0', 'service-info', '1.0.0', 'https://github.com/ga4gh-discovery/ga4gh-service-info/blob/develop/service-info.yaml', '1');
INSERT INTO ga4gh_schema.standard_version VALUES ('passports:1.0.0', 'passports', '1.0.0', 'https://github.com/ga4gh-duri/ga4gh-duri.github.io/blob/master/researcher_ids/ga4gh_passport_v1.md#ga4gh-passport', '1');
INSERT INTO ga4gh_schema.standard_version VALUES ('drs:1.0.0', 'drs', '1.0.0', 'https://ga4gh.github.io/data-repository-service-schemas/preview/release/drs-1.0.0/docs/', '1');
INSERT INTO ga4gh_schema.standard_version VALUES ('vcf:4.1', 'vcf', '4.1', 'https://samtools.github.io/hts-specs/VCFv4.1.pdf', '1');
INSERT INTO ga4gh_schema.standard_version VALUES ('vcf:4.2', 'vcf', '4.2', 'https://samtools.github.io/hts-specs/VCFv4.2.pdf', '1');
INSERT INTO ga4gh_schema.standard_version VALUES ('vcf:4.3', 'vcf', '4.3', 'https://samtools.github.io/hts-specs/VCFv4.3.pdf', '1');
INSERT INTO ga4gh_schema.standard_version VALUES ('psp:1.0.0', 'psp', '1.0.0', 'https://www.ga4gh.org/wp-content/uploads/GA4GH-Data-Privacy-and-Security-Policy_FINAL-August-2019.pdf', '1');
INSERT INTO ga4gh_schema.standard_version VALUES ('aai:1.0.0', 'aai', '1.0.0', 'https://github.com/ga4gh/data-security/blob/master/AAI/AAIConnectProfile.md', '1');
INSERT INTO ga4gh_schema.standard_version VALUES ('family-history:1.0.0', 'family-history', '1.0.0', 'https://drive.google.com/file/d/0B9MKz0Tq6z3QeXF0U1lUTW9XREtxdGk0NXo2eTdDZ190cVlB/view', '1');
INSERT INTO ga4gh_schema.standard_version VALUES ('trs:2.0.0', 'trs', '2.0.0', 'https://ga4gh.github.io/tool-registry-service-schemas/preview/2.0.0/docs/pdf/index.pdf', '1');
INSERT INTO ga4gh_schema.standard_version VALUES ('wes:1.0.0', 'wes', '1.0.0', 'https://ga4gh.github.io/workflow-execution-service-schemas/openapi/workflow_execution_service.swagger.yaml', '1');
INSERT INTO ga4gh_schema.standard_version VALUES ('vr:1.0.0', 'vr', '1.0.0', 'https://vr-spec.readthedocs.io/en/1.0/', '1');
INSERT INTO ga4gh_schema.standard_version VALUES ('dsip:4.0.0', 'dsip', '4.0.0', 'https://github.com/ga4gh/data-security/blob/master/DSIP/DSIP_v4.0.md', '1');
INSERT INTO ga4gh_schema.standard_version VALUES ('beacon:1.0.0', 'beacon', '1.0.0', 'https://github.com/ga4gh-beacon/specification/blob/master/beacon.md', '1');
INSERT INTO ga4gh_schema.standard_version VALUES ('service-registry:1.0.0', 'service-registry', '1.0.0', 'https://github.com/ga4gh-discovery/ga4gh-service-registry/blob/develop/service-registry.yaml', '1');
INSERT INTO ga4gh_schema.standard_version VALUES ('cram:2.1.0', 'cram', '2.1.0', 'https://samtools.github.io/hts-specs/CRAMv2.1.pdf', '1');
INSERT INTO ga4gh_schema.standard_version VALUES ('cram:3.0.0', 'cram', '3.0.0', 'https://samtools.github.io/hts-specs/CRAMv3.pdf', '1');
INSERT INTO ga4gh_schema.standard_version VALUES ('vbt:1.0.0', 'vbt', '1.0.0', 'https://github.com/ga4gh/benchmarking-tools', '1');
INSERT INTO ga4gh_schema.standard_version VALUES ('duo:1.0.0', 'duo', '1.0.0', 'https://github.com/EBISPOT/DUO', '1');
INSERT INTO ga4gh_schema.standard_version VALUES ('crypt4gh:1.0.0', 'crypt4gh', '1.0.0', 'http://samtools.github.io/hts-specs/crypt4gh.pdf', '1');
INSERT INTO ga4gh_schema.standard_version VALUES ('pedigree:1.0.0', 'pedigree', '1.0.0', 'https://github.com/ga4gh-cp/pedigree', '1');
INSERT INTO ga4gh_schema.standard_version VALUES ('sam:1.0.0', 'sam', '1.0.0', 'https://samtools.github.io/hts-specs/SAMv1.pdf', '1');
INSERT INTO ga4gh_schema.standard_version VALUES ('drs:1.1.0', 'drs', '1.1.0', 'https://ga4gh.github.io/data-repository-service-schemas/preview/release/drs-1.1.0/docs/', '1');

INSERT INTO ga4gh_schema.implementation VALUES ('org.dockstore.dockstoreapi', 'trs:2.0.0', 'Dockstore', 'Dockstore TRS implementation', 'org.dockstore', NULL, 'https://dockstore.org/api/static/swagger-ui/index.html', NULL, NULL, NULL, '1.8.1', 'https://dockstore.org/api/api/ga4gh/v2/', 'deployment', NULL);
INSERT INTO ga4gh_schema.implementation VALUES ('fi.rahtiapp.registry-beacon', 'service-registry:1.0.0', 'ELIXIR-FI Beacon Registry', 'ELIXIR-FI Beacon Registry at CSC for Beacon network', 'fi.csc', 'https://www.csc.fi/contact-info', 'https://beacon-network.readthedocs.io/en/latest/', '2019-09-04 12:00:00+00', '2020-07-23 18:03:14+00', 'dev', '1.1.0', 'https://registry-beacon.rahtiapp.fi', 'deployment', NULL);
INSERT INTO ga4gh_schema.implementation VALUES ('pro.biocontainers.biocontainersapi', 'trs:2.0.0', 'Biocontainers', 'Biocontainers TRS implementation', 'pro.biocontainers', NULL, 'https://biocontainers-edu.biocontainers.pro/en/latest/', NULL, NULL, NULL, '1.0.0', 'https://api.biocontainers.pro/api/ga4gh/v2', 'deployment', NULL);
INSERT INTO ga4gh_schema.implementation VALUES ('com.dnastack.beacon-network', 'service-registry:1.0.0', 'DNAstack Beacon Network', 'The Beacon Network is a search engine across the world''s public beacons. It enables global discovery of genetic mutations, federated across a large and growing network of shared genetic datasets.The Beacon Network is developed, maintained, and hosted by DNAstack.', 'com.dnastack', 'mailto:support@dnastack.com', 'https://beacon-network.org/#/developers/api/beacon-network', NULL, NULL, 'prod', '1.1-149-ga8b0cf5', 'https://beacon-network.org/api/v2', 'deployment', NULL);
INSERT INTO ga4gh_schema.implementation VALUES ('edu.caltech.rnaget', 'rnaget:1.0.0', 'Caltech RNAget Reference Implementation', 'RNAget implementation serving compliance test dataset', 'edu.caltech', 'sau@caltech.edu', 'https://felcat.caltech.edu/rnaget', NULL, NULL, 'production', '1.0.0', 'https://felcat.caltech.edu/rnaget', 'deployment', NULL);
INSERT INTO ga4gh_schema.implementation VALUES ('eu.crg.rnaget', 'rnaget:1.0.0', 'CRG RNAget Reference Implementation', 'RNAget implementation serving compliance test dataset', 'eu.crg', 'emilio.palumbo@crg.eu', 'https://genome.crg.cat/rnaget', NULL, NULL, 'production', '1.0.0', 'https://genome.crg.cat/rnaget', 'deployment', NULL);
INSERT INTO ga4gh_schema.implementation VALUES ('uk.ac.ebi.insdc.refget', 'refget:1.0.0', 'INSDC Refget Mirror', 'This web service serves genomic reference sequences from the International Nucleotide Sequence Database Collaboration (INSDC) according to the Reference Sequence Retrieval (Refget) API protocol. Refget is an open protocol developed and maintained by the Global Alliance for Genomics and Health (GA4GH). The Refget protocol prescribes the access of sequences by an unambiguous, vendor-neutral identifier that is derived from a hash digest of the raw sequence content. One or more hashing functions can be supported. The following checksum identifier formats are supported by this service: GA4GH Variant Representation sequence checksum, Refget protocol Trunc512, MD5', 'uk.ac.ebi', 'mailto:jeremy.adams@ga4gh.org', 'https://refget-insdc.jeremy-codes.com/index.html', NULL, NULL, NULL, '0.3.0', 'https://refget-insdc.jeremy-codes.com', 'deployment', NULL);
INSERT INTO ga4gh_schema.implementation VALUES ('org.autismspeaks.mssng.service-registry', 'service-registry:1.0.0', 'MSSNG GA4GH Service Registry', 'Provides links to GA4GH services offered by the MSSNG project', 'org.autismspeaks', 'mailto:asgenetics@autismspeaks.org', 'https://github.com/ga4gh-discovery/ga4gh-service-registry', NULL, NULL, 'prod', '2.0-113-g274a2aa', 'https://ga4gh-service-registry.mss.ng', 'deployment', NULL);
INSERT INTO ga4gh_schema.implementation VALUES ('org.ga4gh.registry', 'service-registry:1.0.0', 'GA4GH Standards and Implementations Registry', 'Flexible API registry of all GA4GH standards and associated implementations', 'org.ga4gh', 'mailto:jeremy.adams@ga4gh.org', 'https://ga4gh.github.io/ga4gh-registry/docs/index.html', NULL, NULL, NULL, '1.0.0', 'https://registry.ga4gh.org/v1', 'deployment', NULL);
INSERT INTO ga4gh_schema.implementation VALUES ('gov.nih.nhlbi.biodatacatalyst.drs', 'drs:1.1.0', 'BioData Catalyst', 'Full implementation of the DRS 1.1 standard with support for persistent identifiers. Open source DRS server that follows the Gen3 implementation. Gen3 is a GA4GH compliant open source platform for developing framework services and data commons. Data commons accelerate and democratize the process of scientific discovery, especially over large or complex datasets. Gen3 is maintained by the Center for Translational Data Science at the University of Chicago. https://gen3.org', 'gov.nih.nhlbi.biodatacatalyst', 'mailto:aculotti@uchicago.edu', 'http://petstore.swagger.io/?url=https://raw.githubusercontent.com/uc-cdis/Indexd/master/openapis/swagger.yaml#/DRS', '2020-07-24 12:00:00+00', '2020-07-24 12:00:00+00', NULL, '2.12.0', 'https://gen3.biodatacatalyst.nhlbi.nih.gov/', 'deployment', 'dg.4503');
INSERT INTO ga4gh_schema.implementation VALUES ('com.dnastack.search.test', 'search:1.0.0', 'DNAstack Discovery Search test', NULL, 'com.dnastack', NULL, NULL, NULL, NULL, 'dev', '0.1.0', 'https://storage.googleapis.com/ga4gh-tables-example/tables', 'deployment', NULL);
INSERT INTO ga4gh_schema.implementation VALUES ('gov.nih.nci.dcfs.drs', 'drs:1.1.0', 'NCI DCFS', 'DRS server that follows the Gen3 implementation. Gen3 is a GA4GH compliant open source platform for developing framework services and data commons. Data commons accelerate and democratize the process of scientific discovery, especially over large or complex datasets. Gen3 is maintained by the Center for Translational Data Science at the University of Chicago. https://gen3.org', 'gov.nih.nci.dcfs', 'mailto:mlukowski@uchicago.edu', 'http://petstore.swagger.io/?url=https://raw.githubusercontent.com/uc-cdis/Indexd/master/openapis/swagger.yaml#/DRS', '2020-07-24 12:00:00+00', '2020-07-24 12:00:00+00', NULL, '2.12.0', 'https://nci-crdc.datacommons.io/', 'deployment', 'dg.4DFC');
INSERT INTO ga4gh_schema.implementation VALUES ('io.theanvil.drs', 'drs:1.1.0', 'AnVIL', 'DRS server that follows the Gen3 implementation. Gen3 is a GA4GH compliant open source platform for developing framework services and data commons. Data commons accelerate and democratize the process of scientific discovery, especially over large or complex datasets. Gen3 is maintained by the Center for Translational Data Science at the University of Chicago. https://gen3.org', 'io.theanvil', 'mailto:aculotti@uchicago.edu', 'http://petstore.swagger.io/?url=https://raw.githubusercontent.com/uc-cdis/Indexd/master/openapis/swagger.yaml#/DRS', '2020-07-24 12:00:00+00', '2020-07-24 12:00:00+00', NULL, '2.12.0', 'https://gen3.theanvil.io/', 'deployment', 'dg.ANV0');
INSERT INTO ga4gh_schema.implementation VALUES ('uk.ac.ebi.refget.ref-impl', 'refget:1.0.0', 'Refget reference implementation', 'Refget’s reference implementation is implemented in Perl and is updated with each approved change to the refget specification. The server stores metadata (e.g. sequence length, known aliases) within a RDBMS such as PostgreSQL, MySQL or SQLite through the DBIx::Class (https://metacpan.org/pod/DBIx::Class) object relational mapper, implements its application logic using the Mojolicious framework (https://metacpan.org/pod/Mojolicious) and features an extensive library of tests.', 'uk.ac.ebi', 'mailto:ayates@ebi.ac.uk', 'https://github.com/andrewyatz/refget-server-perl', '2020-08-07 13:19:49+00', '2020-08-07 13:19:49+00', NULL, '1.0.0', 'https://refget.herokuapp.com', 'deployment', NULL);
INSERT INTO ga4gh_schema.implementation VALUES ('uk.ac.ebi.cram-reference-registry', 'refget:1.0.0', 'CRAM Reference Registry', 'ENA’s CRAM Reference Registry is the original refget deployment serving CRAM’s requirements for a centralised server for reference sequence retrieval. It served as the blueprint for the refget specification. All sequences held in the INSDC resources (ENA, Genbank, DDBJ) have been checksumed against the MD5 checksum, as noted in the CRAM specification. This server hosts over 2.5 billion sequences in an Oracle database. To reduce database and server load, the CRAM reference registry is hosted behind a Squid proxy server, to provide fast access to frequently accessed sequences.', 'uk.ac.ebi', 'mailto:ayates@ebi.ac.uk', 'https://ena-docs.readthedocs.io/en/latest/retrieval/programmatic-access.html#access-the-cram-reference-registry', '2020-08-07 13:19:49+00', '2020-08-07 13:19:49+00', NULL, '1.0.0', 'https://www.ebi.ac.uk/ena/cram', 'deployment', NULL);
INSERT INTO ga4gh_schema.implementation VALUES ('uk.ac.ebi.refget-serverless', 'refget:1.0.0', 'Serverless refget on AWS', 'The refget-cloud codebase used in the AWS ECS Fargate deployment has been repurposed to work in a serverless context. In this case, a refget service has been created without any provisioning of servers, VMs, or container instances. Instead, the service consists of three AWS Lambda functions (one for each endpoint in the refget specification); each function is associated with an HTTPS request route via API Gateway. The serverless refget points to the same INSDC public S3 bucket. This service is best considered as a technical demonstration to complement the above containerized service; together they illustrate how refget can be deployed in multiple contexts using cloud resources.', 'uk.ac.ebi', 'mailto:jeremy.adams@ga4gh.org', 'https://github.com/ga4gh/refget-cloud', '2020-08-07 13:19:49+00', '2020-08-07 13:19:49+00', NULL, '1.0.0', 'https://spjb6ejone.execute-api.us-east-2.amazonaws.com/Prod', 'deployment', NULL);
INSERT INTO ga4gh_schema.implementation VALUES ('com.dnastack.wes.demo', 'wes:1.0.0', 'DNAstack Demo WES Service', 'Demo Workflow Execution Service (WES)', 'com.dnastack', 'mailto:support@dnastack.com', 'https://github.com/ga4gh/workflow-execution-service-schemas', '2020-09-14 18:45:21+00', '2020-09-14 18:45:21+00', 'demo', '1.0.0', 'https://ddap-wes-service.prod.dnastack.com/ga4gh/wes/v1', 'deployment', NULL);
INSERT INTO ga4gh_schema.implementation VALUES ('org.ga4gh.htsgetreference.variants', 'htsget:1.2.0', 'GA4GH htsget reference server variants API', 'Reference web service of the GA4GH htsget protocol. Streams variant data from public datasets, such as Tabula Muris and 1000 Genomes.', 'org.ga4gh', 'mailto:jeremy.adams@ga4gh.org', 'https://ga4gh.github.io/htsget-refserver/docs/index.html', '2020-08-31 08:00:00+00', '2020-09-04 14:40:00+00', 'production', '1.3.0', 'https://htsget.ga4gh.org/variants', 'deployment', NULL);
INSERT INTO ga4gh_schema.implementation VALUES ('org.ga4gh.htsgetreference.reads', 'htsget:1.2.0', 'GA4GH htsget reference server reads API', 'Reference web service of the GA4GH htsget protocol. Streams alignment data from public datasets, such as Tabula Muris and 1000 Genomes.', 'org.ga4gh', 'mailto:jeremy.adams@ga4gh.org', 'https://ga4gh.github.io/htsget-refserver/docs/index.html', '2019-09-15 12:00:00+00', '2020-09-04 14:40:00+00', 'production', '1.3.0', 'https://htsget.ga4gh.org/reads', 'deployment', NULL);
INSERT INTO ga4gh_schema.implementation VALUES ('com.sb.cavatica.drs', 'drs:1.0.0', 'Cavatica DRS API', 'The Data Repository Service (DRS) API provides a generic interface to data repositories so data consumers, including workflow systems, can access data in a single, standard way regardless of where it''s stored and how it''s managed. The primary functionality of DRS is to map a logical ID to a means for physically retrieving the data represented by the ID.', 'com.sb', 'mailto:support@sevenbridges.com', 'https://docs.cavatica.org/docs/drs-api-overview', '2020-09-10 00:41:57+00', '2020-09-10 00:41:57+00', 'production', '1.0.0', 'https://cavatica-ga4gh-api.sbgenomics.com', 'deployment', 'sbcav');
INSERT INTO ga4gh_schema.implementation VALUES ('com.sb.cgc.drs', 'drs:1.0.0', 'Cancer Genomics Cloud DRS API', 'The Data Repository Service (DRS) API provides a generic interface to data repositories so data consumers, including workflow systems, can access data in a single, standard way regardless of where it''s stored and how it''s managed. The primary functionality of DRS is to map a logical ID to a means for physically retrieving the data represented by the ID.', 'com.sb', 'mailto:support@sevenbridges.com', 'https://docs.cancergenomicscloud.org/docs/drs-api-overview', '2020-09-10 00:41:57+00', '2020-09-10 00:41:57+00', 'production', '1.0.0', 'https://cgc-ga4gh-api.sbgenomics.com', 'deployment', 'sbcgc');
INSERT INTO ga4gh_schema.implementation VALUES ('com.dnastack.search', 'search:1.0.0', 'ga4gh-search-adapter-presto-public', 'Supports data discovery by searching heterogeneous genomic and clinical data using a uniform query language.', 'com.dnastack', 'mailto:support@dnastack.com', 'https://github.com/ga4gh-discovery/ga4gh-discovery-search', '2020-09-14 18:41:09+00', '2020-09-14 18:41:09+00', 'prod', '0.4-189-gbfc2688', 'https://ga4gh-search-adapter-presto-public.prod.dnastack.com', 'deployment', NULL);
INSERT INTO ga4gh_schema.implementation VALUES ('edu.chop.kfdrc', 'drs:1.1.0', 'The Kids First Data Resource Center (KFDRC)', 'Full implementation of the DRS 1.1 standard with support for persistent identifiers. Open source DRS server that follows the Gen3 implementation. Gen3 is a GA4GH compliant open source platform for developing framework services and data commons. Data commons accelerate and democratize the process of scientific discovery, especially over large or complex datasets. Gen3 is maintained by the Center for Translational Data Science at the University of Chicago. https://gen3.org', 'edu.chop', 'mailto:heathap@email.chop.edu', 'https://petstore.swagger.io/?url=https://raw.githubusercontent.com/uc-cdis/Indexd/master/openapis/swagger.yaml#/DRS', '2020-10-06 13:11:38+00', '2020-10-06 13:11:38+00', 'production', '2020.08', 'https://data.kidsfirstdrc.org', 'deployment', NULL);
INSERT INTO ga4gh_schema.implementation VALUES ('com.sbgenomics.cgc-ga4gh-api.wes', 'wes:1.0.0', 'CGC GA4GH WES API', 'This service provides a standard way for users to submit workflow requests to workflow execution systems, and to monitor their execution.', 'com.sb', 'mailto:support@sevenbridges.com', 'https://docs.cancergenomicscloud.org/wes-api-overview', '2020-11-10 18:45:39+00', '2020-11-10 18:45:39+00', 'production', '1.0.1.4', 'https://cgc-ga4gh-api.sbgenomics.com/ga4gh/wes/v1/', 'deployment', NULL);
INSERT INTO ga4gh_schema.implementation VALUES ('org.ga4gh.htsget-refserver', 'htsget:1.2.0', 'htsget Reference Server', 'Reference server implementation of the htsget API protocol for securely streaming genomic data.', 'org.ga4gh', 'mailto:jeremy.adams@ga4gh.org', 'https://github.com/ga4gh/htsget-refserver', '2021-01-01 17:00:00+00', '2021-01-01 17:00:00+00', NULL, '1.4.1', NULL, 'implementation', NULL);
INSERT INTO ga4gh_schema.implementation VALUES ('org.ga4gh.refget-cloud', 'refget:1.0.0', 'Refget Cloud codebase', 'Configurable, python-based Refget web service. Can be configured to run in multiple deployment contexts (e.g. containerized server, serverless) and serve data from multiple cloud-based sources.', 'org.ga4gh', 'mailto:jeremy.adams@ga4gh.org', 'https://github.com/ga4gh/refget-cloud', '2021-01-01 17:00:00+00', '2021-01-01 17:00:00+00', NULL, '0.3.1', NULL, 'implementation', NULL);
INSERT INTO ga4gh_schema.implementation VALUES ('edu.ctds.gen3.indexd', 'drs:1.1.0', 'Gen3 Indexd Server', 'Indexd is a hash-based data indexing and tracking service providing 128-bit globally unique identifiers. It is designed to be accessed via a REST-like API or via a client. It supports distributed resolution with a central resolver talking to other Indexd servers. It supports full implementation of the DRS 1.1 standard with support for persistent identifiers. Open source DRS server that follows the Gen3 implementation. Gen3 is a GA4GH compliant open source platform for developing framework services and data commons. Data commons accelerate and democratize the process of scientific discovery, especially over large or complex datasets. Gen3 is maintained by the Center for Translational Data Science at the University of Chicago. https://gen3.org', 'edu.ctds', 'mailto:binamb@uchicago.edu', 'https://github.com/uc-cdis/indexd', '2021-01-01 22:42:00+00', '2021-01-01 22:42:00+00', NULL, '3.0.0', NULL, 'implementation', NULL);
INSERT INTO ga4gh_schema.implementation VALUES ('com.sbgenomics.cavatica-ga4gh-api.wes', 'wes:1.0.0', 'Cavatica GA4GH WES API', 'This service provides a standard way for users to submit workflow requests to workflow execution systems, and to monitor their execution.', 'com.sb', 'mailto:support@sevenbridges.com', 'https://docs.cavatica.org/wes-api-overview', '2021-02-01 18:49:11+00', '2021-02-01 18:49:11+00', 'production', '1.0.1.4', 'https://cavatica-ga4gh-api.sbgenomics.com/ga4gh/wes/v1/', 'deployment', NULL);
INSERT INTO ga4gh_schema.implementation VALUES ('gov.nih.nhlbi.biodatacatalyst.sb.ga4gh-api.wes', 'wes:1.0.0', 'BDC GA4GH WES API', 'This service provides a standard way for users to submit workflow requests to workflow execution systems, and to monitor their execution.', 'com.sb', 'mailto:support@sevenbridges.com', 'https://sb-biodatacatalyst.readme.io/wes-api-overview', '2021-02-01 18:54:44+00', '2021-02-01 18:54:44+00', 'production', '1.0.1.4', 'https://ga4gh-api.sb.biodatacatalyst.nhlbi.nih.gov/ga4gh/wes/v1/', 'deployment', NULL);